name: Deploy to Prod Environment

on:
  pull_request:
    branches:
      - master

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: set up
        uses: actions/setup-go@v2
        with:
          go-version: 1.20
        id: go

      - id: checkout
        name: Checkout repo
        uses: actions/checkout@v2

  build:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: build
        name: build
        run: go build ./...

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Coverage Check
        id: coverage_check #@FIXME: デプロイの自動化の検証のため、一時的にカバレッジ閾値を変更
        run: |
          go test -coverprofile=coverage.out ./...
          COVERAGE=$(go tool cover -func=coverage.out | grep 'total:' | awk '{ print $3 }' | sed 's/%//g')
          echo "Coverage: ${COVERAGE}%"
          if (( $(echo "$COVERAGE < 10.0" | bc -l) )); then
            echo "Error: coverage is below 10%"
            exit 1
          fi

  deploy:
    runs-on: ubuntu-latest
    env:
      TZ: Asia/Tokyo
    needs: test
    steps:
      - id: checkout
        name: Checkout repo
        uses: actions/checkout@v2

      - name: Generate timestamp
        id: timestamp
        run: echo "::set-output name=value::$(date +%Y%m%d-%H%M%S)"

      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with: #@FIXME: こっちの認証方法は古いらしい
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - id: 'deploy'
        uses: 'google-github-actions/deploy-appengine@v1'
        with:
          deliverables: app_dev.yaml
          flags: '--version=prod-${{ steps.timestamp.outputs.value }} --no-promote'